digraph "clustermergeSort.py" {
	graph [label="mergeSort.py"]
	1 [label="from datetime import *
import random
\"\"\"
Nome programma: mergeSort.py
Descrizione: algoritmi
\"\"\"
nome_programma = 'MergeSort.py'
print('Inizio esecuzione di ' + nome_programma)
\"\"\"
Nome funzione: creaVettore
Descrizione: creazione vettore casuale
Parametri: nElementi
\"\"\"
def creaLista(nElementi):...
\"\"\"
Nome funzione: merge
Descrizione: fusione di due liste ordinate
Parametri: vettore
\"\"\"
def merge(l1, l2):...
\"\"\"
Nome funzione: mergeSort
Descrizione: 
Parametri: lista casuale
\"\"\"
def mergeSort(l):...
boolDebug = True
if boolDebug == True:
"]
	"1_calls" [label=print
 shape=box]
	1 -> "1_calls" [label=calls style=dashed]
	37 [label="elementi = int(input('Inserisci numero elementi vettore: '))
lista = creaLista(elementi)
lista1 = [3, 5]
lista2 = [7, 12, 15]
"]
	"37_calls" [label="int
creaLista
" shape=box]
	37 -> "37_calls" [label=calls style=dashed]
	38 [label="if boolDebug == False:
"]
	39 [label="lista1 = [3, 5]
lista2 = [7, 12, 15]
"]
	40 [label="inizio = datetime.utcnow()
if __name__ == '__main__':
"]
	"40_calls" [label="datetime.utcnow
" shape=box]
	40 -> "40_calls" [label=calls style=dashed]
	41 [label="if boolDebug == True:
"]
	43 [label="print('Lista:      ' + str(lista))
"]
	"43_calls" [label=print
 shape=box]
	43 -> "43_calls" [label=calls style=dashed]
	44 [label="lista3 = merge(lista1, lista2)
listaMerge = mergeSort(lista)
"]
	"44_calls" [label="merge
mergeSort
" shape=box]
	44 -> "44_calls" [label=calls style=dashed]
	42 [label="fine = datetime.utcnow()
print('MergeSort:  ' + str(listaMerge))
print('')
print('Fusione di due liste ordinate:')
print('')
print('Lista1:     ' + str(lista1))
print('Lista2:     ' + str(lista2))
print('Merge:      ' + str(lista3))
tempo = fine - inizio
print(tempo)
print('Esecuzione terminata')
"]
	"42_calls" [label="datetime.utcnow
print
print
print
print
print
print
print
print
print
" shape=box]
	42 -> "42_calls" [label=calls style=dashed]
	44 -> 42 [label=""]
	43 -> 44 [label=""]
	41 -> 43 [label="boolDebug == True
"]
	41 -> 44 [label="(boolDebug != True)
"]
	40 -> 41 [label="__name__ == '__main__'
"]
	40 -> 42 [label="(__name__ != '__main__')
"]
	39 -> 40 [label=""]
	38 -> 39 [label="boolDebug == False
"]
	38 -> 40 [label="(boolDebug != False)
"]
	37 -> 38 [label=""]
	1 -> 37 [label="boolDebug == True
"]
	1 -> 38 [label="(boolDebug != True)
"]
	subgraph clustercreaLista {
		graph [label=creaLista]
		3 [label="vettore = []
i = 0
"]
		4 [label="for i in range(0, nElementi):
"]
		5 [label="vettore.append(int(random.random() * 100 + 1))
"]
		"5_calls" [label="vettore.append
" shape=box]
		5 -> "5_calls" [label=calls style=dashed]
		5 -> 4 [label=""]
		4 -> 5 [label="range(0, nElementi)
"]
		6 [label="return vettore
"]
		4 -> 6 [label=""]
		3 -> 4 [label=""]
	}
	subgraph clustermerge {
		graph [label=merge]
		10 [label="l3 = []
iDx1 = 0
iDx2 = 0
"]
		11 [label="while iDx1 < len(l1) and iDx2 < len(l2):
"]
		12 [label="if l1[iDx1] < l2[iDx2]:
"]
		14 [label="l3.append(l1[iDx1])
iDx1 += 1
"]
		"14_calls" [label="l3.append
" shape=box]
		14 -> "14_calls" [label=calls style=dashed]
		14 -> 11 [label=""]
		12 -> 14 [label="l1[iDx1] < l2[iDx2]
"]
		16 [label="l3.append(l2[iDx2])
iDx2 += 1
"]
		"16_calls" [label="l3.append
" shape=box]
		16 -> "16_calls" [label=calls style=dashed]
		16 -> 11 [label=""]
		12 -> 16 [label="(l1[iDx1] >= l2[iDx2])
"]
		11 -> 12 [label="iDx1 < len(l1) and iDx2 < len(l2)
"]
		13 [label="while iDx1 < len(l1):
"]
		17 [label="l3.append(l1[iDx1])
iDx1 += 1
"]
		"17_calls" [label="l3.append
" shape=box]
		17 -> "17_calls" [label=calls style=dashed]
		17 -> 13 [label=""]
		13 -> 17 [label="iDx1 < len(l1)
"]
		18 [label="while iDx2 < len(l2):
"]
		19 [label="l3.append(l2[iDx2])
iDx2 += 1
"]
		"19_calls" [label="l3.append
" shape=box]
		19 -> "19_calls" [label=calls style=dashed]
		19 -> 18 [label=""]
		18 -> 19 [label="iDx2 < len(l2)
"]
		20 [label="return l3
"]
		18 -> 20 [label="(iDx2 >= len(l2))
"]
		13 -> 18 [label="(iDx1 >= len(l1))
"]
		11 -> 13 [label="(not (iDx1 < len(l1) and iDx2 < len(l2)))
"]
		10 -> 11 [label=""]
	}
	subgraph clustermergeSort {
		graph [label=mergeSort]
		24 [label="l2 = []
l3 = []
if len(l) > 1:
"]
		25 [label="mezzo = int(len(l) / 2)
"]
		"25_calls" [label=int
 shape=box]
		25 -> "25_calls" [label=calls style=dashed]
		27 [label="for i in range(0, mezzo):
"]
		28 [label="l2.append(l[i])
"]
		"28_calls" [label="l2.append
" shape=box]
		28 -> "28_calls" [label=calls style=dashed]
		28 -> 27 [label=""]
		27 -> 28 [label="range(0, mezzo)
"]
		29 [label="for i in range(mezzo, len(l)):
"]
		30 [label="l3.append(l[i])
"]
		"30_calls" [label="l3.append
" shape=box]
		30 -> "30_calls" [label=calls style=dashed]
		30 -> 29 [label=""]
		29 -> 30 [label="range(mezzo, len(l))
"]
		31 [label="v2 = mergeSort(l2)
v3 = mergeSort(l3)
lFin = merge(v2, v3)
return lFin
"]
		"31_calls" [label="mergeSort
mergeSort
merge
" shape=box]
		31 -> "31_calls" [label=calls style=dashed]
		29 -> 31 [label=""]
		27 -> 29 [label=""]
		25 -> 27 [label=""]
		24 -> 25 [label="len(l) > 1
"]
		26 [label="if len(l) == 1:
"]
		33 [label="return l
"]
		26 -> 33 [label="len(l) == 1
"]
		24 -> 26 [label="(len(l) <= 1)
"]
	}
}
