digraph "clusternormale.py_OBFUSCATED.py" {
	graph [label="normale.py_OBFUSCATED.py"]
	1 [label="from random import randint
from random import SystemRandom
OOOOO000000000OOOOO00OO = 10
O0O0000O0O00OOO0O0O0O0O = [36, 58, 1, 46, 23, 5, 16, 65, 2, 41, 2, 7, 1, 37,
    0, 11, 16, 2, 21, 16]
import math
import random
if O0O0000O0O00OOO0O0O0O0O[3] % O0O0000O0O00OOO0O0O0O0O[5
"]
	2 [label="O0O0000O0O00OOO0O0O0O0O[5] = O0O0000O0O00OOO0O0O0O0O[1
    ] * O0O0000O0O00OOO0O0O0O0O[4] % O0O0000O0O00OOO0O0O0O0O[11
    ] + O0O0000O0O00OOO0O0O0O0O[6] % O0O0000O0O00OOO0O0O0O0O[5]
O0O0000O0O00OOO0O0O0O0O[14] = randint(0, 100)
if 7 + O0O0000O0O00OOO0O0O0O0O[4] ^ 2 - 1 != O0O0000O0O00OOO0O0O0O0O[5] ^ 2:
"]
	"2_calls" [label=randint
 shape=box]
	2 -> "2_calls" [label=calls style=dashed]
	4 [label="O0O0000O0O00OOO0O0O0O0O[5] = O0O0000O0O00OOO0O0O0O0O[1
    ] * O0O0000O0O00OOO0O0O0O0O[4] % O0O0000O0O00OOO0O0O0O0O[11
    ] + O0O0000O0O00OOO0O0O0O0O[6] % O0O0000O0O00OOO0O0O0O0O[5]
O0O0000O0O00OOO0O0O0O0O[14] = randint(0, 100)
O0O0000O0O00OOO0O0O0O0O[4] = randint(0, 10) * O0O0000O0O00OOO0O0O0O0O[11
    ] + O0O0000O0O00OOO0O0O0O0O[8]
"]
	"4_calls" [label="randint
randint
" shape=box]
	4 -> "4_calls" [label=calls style=dashed]
	5 [label="O0O0000O0O00OOO0O0O0O0O[4] = randint(0, 10) * O0O0000O0O00OOO0O0O0O0O[11
    ] + O0O0000O0O00OOO0O0O0O0O[8]
O00OO00O00O000O000O0O0O = (O0O0000O0O00OOO0O0O0O0O[4] +
    O0O0000O0O00OOO0O0O0O0O[7] + O0O0000O0O00OOO0O0O0O0O[10]
    ) % O0O0000O0O00OOO0O0O0O0O[11]
OO0O00OOO0O00O0000OOOOO = O00OO00O00O000O000O0O0O + O0O0000O0O00OOO0O0O0O0O[3
    ] % O0O0000O0O00OOO0O0O0O0O[5]
O0O000OOO00O00OO0OOOO00 = O00OO00O00O000O000O0O0O * OO0O00OOO0O00O0000OOOOO
"]
	"5_calls" [label=randint
 shape=box]
	5 -> "5_calls" [label=calls style=dashed]
	3 [label="def OOOOO0O0O0O0O00O00OO000(OO00O0OOOO00O0O0O00O0OO):...
O00OOOOO0OOO0OOOO0O00O0 = 'Tabella Normale'
OOOO0O0OOO0OOO000O0O0OO = 0.0
OO0OOOO000OOO0OO00O00OO = 0.01
O0O0OOOOOO0OO0OOOOOO0O0 = 0.0
OO0O000OOOOO0O0OOOO0O00 = []
if __name__ == '__main__':
"]
	11 [label="print('Inizio elaborazione di ' + O00OOOOO0OOO0OOOO0O00O0)
"]
	"11_calls" [label=print
 shape=box]
	11 -> "11_calls" [label=calls style=dashed]
	13 [label="while OOOO0O0OOO0OOO000O0O0OO <= 4:
"]
	14 [label="O0O000O00OO00OO00OO0000 = OOOOO0O0O0O0O00O00OO000(OOOO0O0OOO0OOO000O0O0OO)
O0O0O0OO00O0000000OOO00 = OOOOO0O0O0O0O00O00OO000(OOOO0O0OOO0OOO000O0O0OO +
    0.005)
OOOOOO0OOOO000OO00O0O00 = OOOOO0O0O0O0O00O00OO000(OOOO0O0OOO0OOO000O0O0OO +
    0.01)
O0O0OOOOOO0OO0OOOOOO0O0 += OO0OOOO000OOO0OO00O00OO / 6 * (
    O0O000O00OO00OO00OO0000 + 4 * O0O0O0OO00O0000000OOO00 +
    OOOOOO0OOOO000OO00O0O00)
OO0O000OOOOO0O0OOOO0O00.append(O0O0OOOOOO0OO0OOOOOO0O0)
OOOO0O0OOO0OOO000O0O0OO += 0.01
"]
	"14_calls" [label="OOOOO0O0O0O0O00O00OO000
OOOOO0O0O0O0O00O00OO000
OOOOO0O0O0O0O00O00OO000
OO0O000OOOOO0O0OOOO0O00.append
" shape=box]
	14 -> "14_calls" [label=calls style=dashed]
	14 -> 13 [label=""]
	13 -> 14 [label="OOOO0O0OOO0OOO000O0O0OO <= 4
"]
	15 [label="OO000OOOO000O0O0O0O0OO0 = int(input('Inserisci valore (0<=Z<=4): '))
O00000OO0OO00O00000OOOO = 100000
O00O0OOO0OO0O0O0O0O0OO0 = 0
OOOO0O0OOO0OOO000O0O0OO = 0
OOOO0000OOOOOO0O0OOOOO0 = 1 / math.sqrt(2 * math.pi)
"]
	"15_calls" [label="int
math.sqrt
" shape=box]
	15 -> "15_calls" [label=calls style=dashed]
	16 [label="while OOOO0O0OOO0OOO000O0O0OO < O00000OO0OO00O00000OOOO:
"]
	17 [label="OO00OOOOOOO00OOOOO00OO0 = random.uniform(0, OO000OOOO000O0O0O0O0OO0)
OO00O000OOOOOO000OO00OO = random.uniform(0, OOOO0000OOOOOO0O0OOOOO0)
if OO00O000OOOOOO000OO00OO <= OOOOO0O0O0O0O00O00OO000(OO00OOOOOOO00OOOOO00OO0):
"]
	"17_calls" [label="random.uniform
random.uniform
" shape=box]
	17 -> "17_calls" [label=calls style=dashed]
	19 [label="O00O0OOO0OO0O0O0O0O0OO0 += 1
"]
	20 [label="OOOO0O0OOO0OOO000O0O0OO += 1
"]
	20 -> 16 [label=""]
	19 -> 20 [label=""]
	17 -> 19 [label="OO00O000OOOOOO000OO00OO <= OOOOO0O0O0O0O00O00OO000(OO00OOOOOOO00OOOOO00OO0)
"]
	17 -> 20 [label="(OO00O000OOOOOO000OO00OO > OOOOO0O0O0O0O00O00OO000(OO00OOOOOOO00OOOOO00OO0))
"]
	16 -> 17 [label="OOOO0O0OOO0OOO000O0O0OO < O00000OO0OO00O00000OOOO
"]
	18 [label="print(O00O0OOO0OO0O0O0O0O0OO0 / O00000OO0OO00O00000OOOO *
    OO000OOOO000O0O0O0O0OO0 * OOOO0000OOOOOO0O0OOOOO0)
print(OO0O000OOOOO0O0OOOO0O00)
"]
	"18_calls" [label="print
print
" shape=box]
	18 -> "18_calls" [label=calls style=dashed]
	12 [label="print('Fine elaborazione')
"]
	"12_calls" [label=print
 shape=box]
	12 -> "12_calls" [label=calls style=dashed]
	18 -> 12 [label=""]
	16 -> 18 [label="(OOOO0O0OOO0OOO000O0O0OO >= O00000OO0OO00O00000OOOO)
"]
	15 -> 16 [label=""]
	13 -> 15 [label="(OOOO0O0OOO0OOO000O0O0OO > 4)
"]
	11 -> 13 [label=""]
	3 -> 11 [label="__name__ == '__main__'
"]
	3 -> 12 [label="(__name__ != '__main__')
"]
	5 -> 3 [label=""]
	4 -> 5 [label=""]
	2 -> 4 [label="7 + O0O0000O0O00OOO0O0O0O0O[4] ^ 2 - 1 != O0O0000O0O00OOO0O0O0O0O[5] ^ 2
"]
	6 [label="O0O0000O0O00OOO0O0O0O0O[2] = randint(0, 100)
O0O0000O0O00OOO0O0O0O0O[5] = randint(0, 10) * O0O0000O0O00OOO0O0O0O0O[11
    ] + O0O0000O0O00OOO0O0O0O0O[8]
"]
	"6_calls" [label="randint
randint
" shape=box]
	6 -> "6_calls" [label=calls style=dashed]
	6 -> 5 [label=""]
	2 -> 6 [label="(7 + O0O0000O0O00OOO0O0O0O0O[4] ^ 2 - 1 == O0O0000O0O00OOO0O0O0O0O[5] ^ 2)
"]
	1 -> 2 [label="O0O0000O0O00OOO0O0O0O0O[3] % O0O0000O0O00OOO0O0O0O0O[5
    ] == O0O0000O0O00OOO0O0O0O0O[2]
"]
	1 -> 3 [label="(O0O0000O0O00OOO0O0O0O0O[3] % O0O0000O0O00OOO0O0O0O0O[5] !=
    O0O0000O0O00OOO0O0O0O0O[2])
"]
	subgraph clusterOOOOO0O0O0O0O00O00OO000 {
		graph [label=OOOOO0O0O0O0O00O00OO000]
		8 [label="O000OO0O0OOO0OOOO0OOO00 = 1 / math.sqrt(2 * math.pi) * math.pow(math.e, -1 /
    2 * math.pow(OO00O0OOOO00O0O0O00O0OO, 2))
return O000OO0O0OOO0OOOO0OOO00
"]
		"8_calls" [label="math.sqrt
math.pow
" shape=box]
		8 -> "8_calls" [label=calls style=dashed]
	}
}
